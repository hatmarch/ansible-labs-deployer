---
# Inputs to this task:
#  - lab_repo
#  - lab_branch
# Outputs of this task:
#  - lab_workshop_name
#  - _lab_local_dir

- name: "Create temporary working directory to use as work_dir"
  tempfile:
    state: directory
    path: "/tmp/"
  register: __work_dir

- name: Set temporary directory for checkout into a variable
  set_fact:
    _lab_local_dir: "{{ __work_dir.path }}"

- name: Clone lab repository (with submodules) into work_dir.
  git:
    repo: "{{ lab_repo }}"
    version: "{{ lab_branch }}"
    dest: "{{ _lab_local_dir }}"
    track_submodules: yes
  register: __git_repo

#- name: Get git details
#  shell: "basename -s .git `git config --get remote.origin.url`"
#  args:
#    chdir: "{{ _lab_local_dir }}"
#  register: __git_repo_name
#
#- name: Set git repository name into a variable
#  set_fact:
#    _lab_name: "{{ __git_repo_name.stdout }}"
# TODO: Make sure all _ are replaced with -
#
#- name: Show fetch lab content info
#  debug:
#    msg: "Local copy of {{ lab_workshop_name }} located in {{ _lab_local_dir }}"

- name: Read file for default settings
  command: cat {{_lab_local_dir}}/.workshop/scripts/default-settings.sh
  register: default_settings

- name: Show file .workshop/scripts/default-settings.sh contents
  debug:
    var: default_settings

- name: Process vars in default settings
  set_fact:
    spawner_repo: "{{ default_settings.stdout | regex_findall('SPAWNER_REPO=(.+)') | first}}"
    spawner_version: "{{ default_settings.stdout | regex_findall('SPAWNER_VERSION=(.+)') | first}}"
    spawner_mode: "{{ default_settings.stdout | regex_findall('SPAWNER_MODE=(.+)') | first}}"
    spawner_image: "{{ default_settings.stdout | regex_findall('SPAWNER_IMAGE=(.+)') | first}}"
    spawner_variant: "{{ default_settings.stdout | regex_findall('SPAWNER_VARIANT=(.+)') | first}}"
    dashboard_repo: "{{ default_settings.stdout | regex_findall('DASHBOARD_REPO=(.+)') | first}}"
    dashboard_version: "{{ default_settings.stdout | regex_findall('DASHBOARD_VERSION=(.+)') | first}}"
    dashboard_image: "{{ default_settings.stdout | regex_findall('DASHBOARD_IMAGE=(.+)') | first}}"
    dashboard_variant: "{{ default_settings.stdout | regex_findall('DASHBOARD_VARIANT=(.+)') | first}}"
    terminal_image: "{{ default_settings.stdout | regex_findall('TERMINAL_IMAGE=(.+)') | first}}"
    console_image: "{{ default_settings.stdout | regex_findall('CONSOLE_IMAGE=(.+)') | first}}"
    resource_budget: "{{ default_settings.stdout | regex_findall('RESOURCE_BUDGET=(.+)') | first}}"
    max_session: "{{ default_settings.stdout | regex_findall('MAX_SESSION_AGE=(.+)') | first}}"
    server_limit: "{{ default_settings.stdout | regex_findall('SERVER_LIMIT=(.+)') | first}}"
    idle_timeout: "{{ default_settings.stdout | regex_findall('IDLE_TIMEOUT=(.+)') | first}}"
    lets_encrypt: "{{ default_settings.stdout | regex_findall('LETS_ENCRYPT=(.+)') | first}}"

- name: Read file for workshop settings
  command: cat {{_lab_local_dir}}/.workshop/settings.sh
  register: workshop_settings

- name: Show file .workshop/settings.sh contents
  debug:
    var: workshop_settings

- name: Override vars with workshop specific settings (REQUIRED)
  set_fact:
    workshop_name: "{{ workshop_settings.stdout | regex_findall('WORKSHOP_NAME=(.+)') | first }}"
    workshop_image: "{{ workshop_settings.stdout | regex_findall('WORKSHOP_IMAGE=(.+)') | first }}"

- name: Override vars with workshop specific settings (OPTIONAL)
  set_fact:
    workshop_description: "{{ workshop_settings.stdout | regex_findall('WORKSHOP_DESCRIPTION=(.+)') | default('', true ) | first | default(workshop_name, true) }}"
    spawner_mode: "{{ workshop_settings.stdout | regex_findall('SPAWNER_MODE=(.+)') | default('', true ) | first | default(spawner_mode, true) }}"
    spawner_image: "{{ workshop_settings.stdout | regex_findall('SPAWNER_IMAGE=(.+)') | default('', true ) | first | default(spawner_image, true) }}"
    spawner_variant: "{{ workshop_settings.stdout | regex_findall('SPAWNER_VARIANT=(.+)') | default('', true ) | first | default(spawner_variant, true) }}"
    dashboard_repo: "{{ workshop_settings.stdout | regex_findall('DASHBOARD_REPO=(.+)') | default('', true ) | first | default(dashboard_repo, true) }}"
    dashboard_version: "{{ default_settings.stdout | regex_findall('DASHBOARD_VERSION=(.+)') | default('', true ) | first | default(dashboard_version, true) }}"
    dashboard_image: "{{ default_settings.stdout | regex_findall('DASHBOARD_IMAGE=(.+)') | default('', true ) | first | default(dashboard_image, true) }}"
    dashboard_variant: "{{ workshop_settings.stdout | regex_findall('DASHBOARD_VARIANT=(.+)') | default('', true ) | first | default(dashboard_variant, true) }}"
    terminal_image: "{{ default_settings.stdout | regex_findall('TERMINAL_IMAGE=(.+)') | default('', true ) | first | default(terminal_image, true) }}"
    console_image: "{{ default_settings.stdout | regex_findall('CONSOLE_IMAGE=(.+)') | default('', true ) | first | default(console_image, true) }}"
    resource_budget: "{{ workshop_settings.stdout | regex_findall('RESOURCE_BUDGET=(.+)') | default('', true ) | first | default(resource_budget, true) }}"
    max_session: "{{ workshop_settings.stdout | regex_findall('MAX_SESSION_AGE=(.+)') | default('', true ) | first | default(max_session, true) }}"
    server_limit: "{{ workshop_settings.stdout | regex_findall('SERVER_LIMIT=(.+)') | default('', true ) | first | default(server_limit, true) }}"
    idle_timeout: "{{ workshop_settings.stdout | regex_findall('IDLE_TIMEOUT=(.+)') | default('', true ) | first | default(idle_timeout, true) }}"
    lets_encrypt: "{{ workshop_settings.stdout | regex_findall('LETS_ENCRYPT=(.+)') | default('', true ) | first | default(lets_encrypt, true) }}"

- name: Check for event variable
  debug:
    var: event

- name: Read event specific configuration if event is defined
  block:
  - name: Read file for event specific settings
    command: cat {{_lab_local_dir}}/.workshop/{{ event }}-settings.sh
    register: event_settings

  - name: Show file .workshop/{{ event }}-settings.sh contents
    debug:
      var: event_settings

  - name: Override vars with event specific settings (REQUIRED)
    set_fact:
      workshop_name: "{{ event_settings.stdout | regex_findall('WORKSHOP_NAME=(.+)') | default('', true ) | first | default(workshop_name, true)}}"
      workshop_image: "{{ event_settings.stdout | regex_findall('WORKSHOP_IMAGE=(.+)') | default('', true ) | first | default(workshop_image, true)}}"

  - name: Override vars with event specific settings (OPTIONAL)
    set_fact:
      workshop_description: "{{ event_settings.stdout | regex_findall('WORKSHOP_DESCRIPTION=(.+)') | default('', true ) | first | default(workshop_name, true) }}"
      spawner_mode: "{{ event_settings.stdout | regex_findall('SPAWNER_MODE=(.+)') | default('', true ) | first | default(spawner_mode, true) }}"
      spawner_image: "{{ event_settings.stdout | regex_findall('SPAWNER_IMAGE=(.+)') | default('', true ) | first | default(spawner_image, true) }}"
      spawner_variant: "{{ event_settings.stdout | regex_findall('SPAWNER_VARIANT=(.+)') | default('', true ) | first | default(spawner_variant, true) }}"
      dashboard_repo: "{{ event_settings.stdout | regex_findall('DASHBOARD_REPO=(.+)') | default('', true ) | first | default(dashboard_repo, true) }}"
      dashboard_version: "{{ event_settings.stdout | regex_findall('DASHBOARD_VERSION=(.+)') | default('', true ) | first | default(dashboard_version, true) }}"
      dashboard_image: "{{ event_settings.stdout | regex_findall('DASHBOARD_IMAGE=(.+)') | default('', true ) | first | default(dashboard_image, true) }}"
      dashboard_variant: "{{ event_settings.stdout | regex_findall('DASHBOARD_VARIANT=(.+)') | default('', true ) | first | default(dashboard_variant, true) }}"
      terminal_image: "{{ event_settings.stdout | regex_findall('TERMINAL_IMAGE=(.+)') | default('', true ) | first | default(terminal_image, true) }}"
      console_image: "{{ event_settings.stdout | regex_findall('CONSOLE_IMAGE=(.+)') | default('', true ) | first | default(console_image, true) }}"
      resource_budget: "{{ event_settings.stdout | regex_findall('RESOURCE_BUDGET=(.+)') | default('', true ) | first | default(resource_budget, true) }}"
      max_session: "{{ event_settings.stdout | regex_findall('MAX_SESSION_AGE=(.+)') | default('', true ) | first | default(max_session, true) }}"
      server_limit: "{{ event_settings.stdout | regex_findall('SERVER_LIMIT=(.+)') | default('', true ) | first | default(server_limit, true) }}"
      idle_timeout: "{{ event_settings.stdout | regex_findall('IDLE_TIMEOUT=(.+)') | default('', true ) | first | default(idle_timeout, true) }}"
      lets_encrypt: "{{ event_settings.stdout | regex_findall('LETS_ENCRYPT=(.+)') | default('', true ) | first | default(lets_encrypt, true) }}"

  when: event is defined and event|trim != ""

- name: Show variables to use for workshop
  debug:
    msg: 
      - "workshop_name = {{ workshop_name }}"
      - "workshop_image =  {{ workshop_image }}"
      - "workshop_description = {{ workshop_description }}"
      - "spawner_repo = {{ spawner_repo }}"
      - "spawner_version =  {{ spawner_version }}"
      - "spawner_mode = {{ spawner_mode }}"
      - "spawner_image = {{ spawner_image }}"
      - "spawner_variant = {{ spawner_variant }}"
      - "dashboard_repo = {{ dashboard_repo }}"
      - "dashboard_version = {{dashboard_version }}"
      - "dashboard_image = {{dashboard_image }}"
      - "dashboard_variant = {{dashboard_variant }}"
      - "terminal_image = {{ terminal_image }}"
      - "console_image = {{ console_image }}"
      - "resource_budget = {{ resource_budget }}"
      - "max_session = {{ max_session }}"
      - "idle_timeout = {{ idle_timeout }}"
      - "server_limit = {{ server_limit }}"
      - "lets_encrypt = {{ lets_encrypt }}"
